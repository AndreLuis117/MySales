@model TesteFabrica.MVC.ViewModels.PedidoViewModel


@{
    ViewBag.Title = "Create";
}

<h2>Cadastrar novo pedido</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


<div class="form-group">
    @{ Html.EnableClientValidation(false); }
    @Html.LabelFor(model => model.ValorTotal, htmlAttributes: new { @class = "control-label col-md-2" })
    
    <div class="control-label col-md-1">
        @Html.DisplayTextFor(model => model.ValorTotal)
    </div>
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Finalizar pedido" class="btn btn-default" />
        </div>
    </div>

    <div class="form-group" align="center" >
        <div align="center">
            <a align="left "class="btn btn-primary" href="@Url.Action("Create", "ItensPedido")">
                Adicionar item no pedido
            </a>
            <a align="center" class="btn btn-primary" href="@Url.Action("CancelarPed", "Pedido")">
                Cancelar pedido
            </a>
        </div>
    </div>
</div>
}

<table class="table">
    <tr>
        <th>
            ID Produto
        </th>
        <th>
            Nome
        </th>
        <th>
            Preço Unitário
        </th>
        <th>
            Quantidade
        </th>
        <th>
            SubTotal
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.ItensPedidos)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.ProdutoId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Produto.Nome)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Produto.Preco)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Qtde)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.SubTotal)
    </td>
    <td>
        @Html.ActionLink("Remover item", "RemoverItem", new { id = item.ProdutoId })
    </td>
</tr>
    }

</table>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
